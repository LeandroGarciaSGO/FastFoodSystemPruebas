/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Presentacion;

/**
 *
 * @author Mariano
 */

import Logica.OperacionesCliente;
import Datos.Cliente;
import Datos.Comida;
import Datos.DetallePedido;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import Datos.Pedido;
import Datos.Usuario;
import Datos.Zona;
import Logica.ABMComida;
import Logica.OperacionesPedido;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.table.DefaultTableModel;
import java.util.ArrayList;
import javax.swing.JOptionPane;

public class DatosPedido extends javax.swing.JFrame {

    /**
     * Creates new form DatosPedido
     */
    private java.sql.Statement sentencia;
    private ResultSet rsDatos;
    private float total;
    private int idP;
    private ArrayList<DetallePedido> listaDetallePedido;
    private ArrayList<DetallePedido> listaDPModificar;
    private ArrayList<Zona> listaZonas;
    private DefaultTableModel modelo;
    private Cliente Cl;
    private Pedido P;
    private Cliente C;
    Usuario usuarioSistema;
    
    public DatosPedido() throws ClassNotFoundException, SQLException {
        initComponents();
        total = 0;
        idP = 0;
        listaDetallePedido = new ArrayList<DetallePedido>();
        listaDPModificar = new ArrayList<DetallePedido>();
        listaZonas = new ArrayList<Zona>();
        modelo = (DefaultTableModel) jTableDetallesPedido.getModel();
        Cl = new Cliente();
        P = new Pedido();
        C = new Cliente();
        setLocationRelativeTo(null);
        Date d = new Date();
        SimpleDateFormat formatoHora = new SimpleDateFormat("HH:mm:ss");
        SimpleDateFormat formatoFecha = new SimpleDateFormat("dd/MM/yyyy");
        String fecha = formatoFecha.format(d);
        String hora = formatoHora.format(d);
        jLabelMostrarFecha.setText(fecha);
        jLabelMostrarHora.setText(hora);
        cargarJComboBoxZona();
        cargarJComboBoxComidaDisponible();
        usuarioSistema = new Usuario();
        jButtonNuevoCliente.setEnabled(false);
    }

    public Usuario getUsuarioSistema() {
        return usuarioSistema;
    }

    public void setUsuarioSistema(Usuario usuarioSistema) {
        this.usuarioSistema = usuarioSistema;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelPedidoNum = new javax.swing.JLabel();
        jLabelMostrarPedidoNum = new javax.swing.JLabel();
        jLabelMostrarHora = new javax.swing.JLabel();
        jLabelHora = new javax.swing.JLabel();
        jLabelMostrarFecha = new javax.swing.JLabel();
        jLabelFecha = new javax.swing.JLabel();
        jPanelCliente = new javax.swing.JPanel();
        jPanelBuscarCliente = new javax.swing.JPanel();
        jLabelBuscarTelefono = new javax.swing.JLabel();
        jTextFieldTelefono = new javax.swing.JTextField();
        jButtonBuscar = new javax.swing.JButton();
        jLabelMensajeExistenciaCliente = new javax.swing.JLabel();
        jButtonNuevoCliente = new javax.swing.JButton();
        jLabelTelefono = new javax.swing.JLabel();
        jLabelApeNom = new javax.swing.JLabel();
        jLabelDomicilio = new javax.swing.JLabel();
        jLabelLugarEnvio = new javax.swing.JLabel();
        jLabelZona = new javax.swing.JLabel();
        jLabelImporteEnvio = new javax.swing.JLabel();
        jLabelMostrarApeNom = new javax.swing.JLabel();
        jLabelMostrarTelefono = new javax.swing.JLabel();
        jLabelMostrarDomicilio = new javax.swing.JLabel();
        jTextFieldLugarDeEnvio = new javax.swing.JTextField();
        jComboBoxZona = new javax.swing.JComboBox<>();
        jLabelMostrarImporte = new javax.swing.JLabel();
        jPanelDatosPedido = new javax.swing.JPanel();
        jLabelComida = new javax.swing.JLabel();
        jComboBoxSeleccionarComida = new javax.swing.JComboBox<>();
        jLabelCantidad = new javax.swing.JLabel();
        jTextFieldCantidad = new javax.swing.JTextField();
        jButtonAgregar = new javax.swing.JButton();
        jScrollPaneDetallePedido = new javax.swing.JScrollPane();
        jTableDetallesPedido = new javax.swing.JTable();
        jButtonEliminar = new javax.swing.JButton();
        jLabelImporteTotal = new javax.swing.JLabel();
        jLabelMostrarImporteTotal = new javax.swing.JLabel();
        jButtonConfirmarPedido = new javax.swing.JButton();
        jButtonCancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("FastFoodSystem - Datos del Pedido");
        setMaximumSize(new java.awt.Dimension(800, 620));
        setMinimumSize(new java.awt.Dimension(800, 620));
        setPreferredSize(new java.awt.Dimension(800, 620));
        setResizable(false);

        jLabelPedidoNum.setText("Pedido Número:");

        jLabelMostrarPedidoNum.setMaximumSize(new java.awt.Dimension(100, 14));
        jLabelMostrarPedidoNum.setMinimumSize(new java.awt.Dimension(100, 14));
        jLabelMostrarPedidoNum.setPreferredSize(new java.awt.Dimension(100, 14));

        jLabelMostrarHora.setMaximumSize(new java.awt.Dimension(60, 14));
        jLabelMostrarHora.setMinimumSize(new java.awt.Dimension(60, 14));
        jLabelMostrarHora.setPreferredSize(new java.awt.Dimension(60, 14));

        jLabelHora.setText("Hora:");

        jLabelMostrarFecha.setMaximumSize(new java.awt.Dimension(85, 14));
        jLabelMostrarFecha.setMinimumSize(new java.awt.Dimension(85, 14));
        jLabelMostrarFecha.setPreferredSize(new java.awt.Dimension(85, 14));

        jLabelFecha.setText("Fecha:");

        jPanelCliente.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Cliente", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Verdana", 0, 14))); // NOI18N
        jPanelCliente.setMaximumSize(new java.awt.Dimension(770, 170));
        jPanelCliente.setMinimumSize(new java.awt.Dimension(770, 170));
        jPanelCliente.setPreferredSize(new java.awt.Dimension(770, 170));

        jPanelBuscarCliente.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Buscar Cliente", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Verdana", 0, 12))); // NOI18N
        jPanelBuscarCliente.setMaximumSize(new java.awt.Dimension(450, 100));
        jPanelBuscarCliente.setMinimumSize(new java.awt.Dimension(450, 100));
        jPanelBuscarCliente.setPreferredSize(new java.awt.Dimension(450, 100));

        jLabelBuscarTelefono.setText("Teléfono:");

        jTextFieldTelefono.setMaximumSize(new java.awt.Dimension(120, 20));
        jTextFieldTelefono.setMinimumSize(new java.awt.Dimension(120, 20));

        jButtonBuscar.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jButtonBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Iconos_Botones/icono-buscar.png"))); // NOI18N
        jButtonBuscar.setText("Buscar");
        jButtonBuscar.setMaximumSize(new java.awt.Dimension(210, 57));
        jButtonBuscar.setMinimumSize(new java.awt.Dimension(210, 57));
        jButtonBuscar.setPreferredSize(new java.awt.Dimension(210, 57));
        jButtonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelBuscarClienteLayout = new javax.swing.GroupLayout(jPanelBuscarCliente);
        jPanelBuscarCliente.setLayout(jPanelBuscarClienteLayout);
        jPanelBuscarClienteLayout.setHorizontalGroup(
            jPanelBuscarClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBuscarClienteLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelBuscarTelefono)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextFieldTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
        );
        jPanelBuscarClienteLayout.setVerticalGroup(
            jPanelBuscarClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBuscarClienteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelBuscarClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelBuscarTelefono)
                    .addComponent(jTextFieldTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabelMensajeExistenciaCliente.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelMensajeExistenciaCliente.setForeground(new java.awt.Color(255, 0, 0));
        jLabelMensajeExistenciaCliente.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelMensajeExistenciaCliente.setMaximumSize(new java.awt.Dimension(175, 25));
        jLabelMensajeExistenciaCliente.setMinimumSize(new java.awt.Dimension(175, 25));
        jLabelMensajeExistenciaCliente.setPreferredSize(new java.awt.Dimension(175, 25));

        jButtonNuevoCliente.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jButtonNuevoCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Iconos_Botones/icono-nuevo-cliente.png"))); // NOI18N
        jButtonNuevoCliente.setText("Nuevo Cliente");
        jButtonNuevoCliente.setMaximumSize(new java.awt.Dimension(210, 57));
        jButtonNuevoCliente.setMinimumSize(new java.awt.Dimension(210, 57));
        jButtonNuevoCliente.setPreferredSize(new java.awt.Dimension(210, 57));
        jButtonNuevoCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNuevoClienteActionPerformed(evt);
            }
        });

        jLabelTelefono.setText("Teléfono:");

        jLabelApeNom.setText("Apellido y Nombre:");

        jLabelDomicilio.setText("Domicilio:");

        jLabelLugarEnvio.setText("Lugar de Envio:");

        jLabelZona.setText("Zona:");

        jLabelImporteEnvio.setText("Importe de Envío:");

        jLabelMostrarApeNom.setMaximumSize(new java.awt.Dimension(150, 14));
        jLabelMostrarApeNom.setMinimumSize(new java.awt.Dimension(150, 14));
        jLabelMostrarApeNom.setPreferredSize(new java.awt.Dimension(150, 14));

        jLabelMostrarTelefono.setMaximumSize(new java.awt.Dimension(150, 14));
        jLabelMostrarTelefono.setMinimumSize(new java.awt.Dimension(150, 14));
        jLabelMostrarTelefono.setPreferredSize(new java.awt.Dimension(150, 14));

        jLabelMostrarDomicilio.setMaximumSize(new java.awt.Dimension(150, 14));
        jLabelMostrarDomicilio.setMinimumSize(new java.awt.Dimension(150, 14));
        jLabelMostrarDomicilio.setPreferredSize(new java.awt.Dimension(150, 14));

        jTextFieldLugarDeEnvio.setMaximumSize(new java.awt.Dimension(150, 20));
        jTextFieldLugarDeEnvio.setMinimumSize(new java.awt.Dimension(150, 20));
        jTextFieldLugarDeEnvio.setPreferredSize(new java.awt.Dimension(150, 20));

        jComboBoxZona.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione la Zona" }));
        jComboBoxZona.setMaximumSize(new java.awt.Dimension(150, 20));
        jComboBoxZona.setMinimumSize(new java.awt.Dimension(150, 20));
        jComboBoxZona.setPreferredSize(new java.awt.Dimension(150, 20));
        jComboBoxZona.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxZonaActionPerformed(evt);
            }
        });

        jLabelMostrarImporte.setMaximumSize(new java.awt.Dimension(150, 14));
        jLabelMostrarImporte.setMinimumSize(new java.awt.Dimension(150, 14));
        jLabelMostrarImporte.setPreferredSize(new java.awt.Dimension(150, 14));

        javax.swing.GroupLayout jPanelClienteLayout = new javax.swing.GroupLayout(jPanelCliente);
        jPanelCliente.setLayout(jPanelClienteLayout);
        jPanelClienteLayout.setHorizontalGroup(
            jPanelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelClienteLayout.createSequentialGroup()
                .addGroup(jPanelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelClienteLayout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jLabelMensajeExistenciaCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonNuevoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelClienteLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanelBuscarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(jPanelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelApeNom)
                    .addComponent(jLabelTelefono)
                    .addComponent(jLabelDomicilio)
                    .addComponent(jLabelLugarEnvio)
                    .addComponent(jLabelZona)
                    .addComponent(jLabelImporteEnvio))
                .addGap(18, 18, 18)
                .addGroup(jPanelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldLugarDeEnvio, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxZona, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelMostrarDomicilio, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelMostrarApeNom, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelMostrarTelefono, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelMostrarImporte, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanelClienteLayout.setVerticalGroup(
            jPanelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelClienteLayout.createSequentialGroup()
                .addGroup(jPanelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanelClienteLayout.createSequentialGroup()
                        .addGroup(jPanelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelTelefono)
                            .addComponent(jLabelMostrarTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelApeNom)
                            .addComponent(jLabelMostrarApeNom, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabelDomicilio)
                            .addComponent(jLabelMostrarDomicilio, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelLugarEnvio)
                            .addComponent(jTextFieldLugarDeEnvio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanelBuscarCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabelMensajeExistenciaCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonNuevoCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanelClienteLayout.createSequentialGroup()
                        .addGroup(jPanelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jComboBoxZona, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelZona))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelMostrarImporte, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelImporteEnvio, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addGap(0, 10, Short.MAX_VALUE))
        );

        jPanelDatosPedido.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Datos del Pedido", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Verdana", 0, 14))); // NOI18N
        jPanelDatosPedido.setMaximumSize(new java.awt.Dimension(770, 200));
        jPanelDatosPedido.setMinimumSize(new java.awt.Dimension(770, 200));
        jPanelDatosPedido.setPreferredSize(new java.awt.Dimension(770, 200));

        jLabelComida.setText("Comida:");

        jComboBoxSeleccionarComida.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione la Comida" }));
        jComboBoxSeleccionarComida.setMaximumSize(new java.awt.Dimension(150, 20));
        jComboBoxSeleccionarComida.setMinimumSize(new java.awt.Dimension(150, 20));
        jComboBoxSeleccionarComida.setPreferredSize(new java.awt.Dimension(150, 20));

        jLabelCantidad.setText("Cantidad:");

        jTextFieldCantidad.setMaximumSize(new java.awt.Dimension(100, 20));
        jTextFieldCantidad.setMinimumSize(new java.awt.Dimension(100, 20));
        jTextFieldCantidad.setPreferredSize(new java.awt.Dimension(100, 20));
        jTextFieldCantidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldCantidadKeyTyped(evt);
            }
        });

        jButtonAgregar.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jButtonAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Iconos_Botones/icono-agregar-comida-detalle-pedido.png"))); // NOI18N
        jButtonAgregar.setText("Agregar");
        jButtonAgregar.setMaximumSize(new java.awt.Dimension(210, 57));
        jButtonAgregar.setMinimumSize(new java.awt.Dimension(210, 57));
        jButtonAgregar.setPreferredSize(new java.awt.Dimension(210, 57));
        jButtonAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAgregarActionPerformed(evt);
            }
        });

        jTableDetallesPedido.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Descripción", "Cantidad", "Precio Unitario", "Precio Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPaneDetallePedido.setViewportView(jTableDetallesPedido);
        if (jTableDetallesPedido.getColumnModel().getColumnCount() > 0) {
            jTableDetallesPedido.getColumnModel().getColumn(0).setResizable(false);
            jTableDetallesPedido.getColumnModel().getColumn(1).setResizable(false);
            jTableDetallesPedido.getColumnModel().getColumn(2).setResizable(false);
            jTableDetallesPedido.getColumnModel().getColumn(3).setResizable(false);
            jTableDetallesPedido.getColumnModel().getColumn(4).setResizable(false);
        }

        jButtonEliminar.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jButtonEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Iconos_Botones/icono-eliminar-detalle-pedido.png"))); // NOI18N
        jButtonEliminar.setText("Eliminar");
        jButtonEliminar.setMaximumSize(new java.awt.Dimension(210, 57));
        jButtonEliminar.setMinimumSize(new java.awt.Dimension(210, 57));
        jButtonEliminar.setPreferredSize(new java.awt.Dimension(210, 57));
        jButtonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminarActionPerformed(evt);
            }
        });

        jLabelImporteTotal.setText("Importe Total: $");

        jLabelMostrarImporteTotal.setMaximumSize(new java.awt.Dimension(100, 14));
        jLabelMostrarImporteTotal.setMinimumSize(new java.awt.Dimension(100, 14));
        jLabelMostrarImporteTotal.setPreferredSize(new java.awt.Dimension(100, 14));

        javax.swing.GroupLayout jPanelDatosPedidoLayout = new javax.swing.GroupLayout(jPanelDatosPedido);
        jPanelDatosPedido.setLayout(jPanelDatosPedidoLayout);
        jPanelDatosPedidoLayout.setHorizontalGroup(
            jPanelDatosPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDatosPedidoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelDatosPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelDatosPedidoLayout.createSequentialGroup()
                        .addComponent(jLabelImporteTotal)
                        .addGap(18, 18, 18)
                        .addComponent(jLabelMostrarImporteTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelDatosPedidoLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabelComida)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxSeleccionarComida, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addComponent(jLabelCantidad)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(103, 103, 103)
                        .addComponent(jButtonAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPaneDetallePedido, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        jPanelDatosPedidoLayout.setVerticalGroup(
            jPanelDatosPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDatosPedidoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelDatosPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelComida)
                    .addComponent(jComboBoxSeleccionarComida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelCantidad)
                    .addComponent(jTextFieldCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPaneDetallePedido, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelDatosPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelDatosPedidoLayout.createSequentialGroup()
                        .addComponent(jButtonEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelDatosPedidoLayout.createSequentialGroup()
                        .addGroup(jPanelDatosPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabelMostrarImporteTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelImporteTotal))
                        .addGap(27, 27, 27))))
        );

        jButtonConfirmarPedido.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jButtonConfirmarPedido.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Iconos_Botones/icono-confirmar-datos-pedido.png"))); // NOI18N
        jButtonConfirmarPedido.setText("Confirmar Pedido");
        jButtonConfirmarPedido.setMaximumSize(new java.awt.Dimension(210, 57));
        jButtonConfirmarPedido.setMinimumSize(new java.awt.Dimension(210, 57));
        jButtonConfirmarPedido.setPreferredSize(new java.awt.Dimension(210, 57));
        jButtonConfirmarPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConfirmarPedidoActionPerformed(evt);
            }
        });

        jButtonCancelar.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jButtonCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Iconos_Botones/icono-cancelar.png"))); // NOI18N
        jButtonCancelar.setText("Cancelar");
        jButtonCancelar.setMaximumSize(new java.awt.Dimension(210, 57));
        jButtonCancelar.setMinimumSize(new java.awt.Dimension(210, 57));
        jButtonCancelar.setPreferredSize(new java.awt.Dimension(210, 57));
        jButtonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButtonConfirmarPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelPedidoNum)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelMostrarPedidoNum, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabelFecha)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelMostrarFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabelHora)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabelMostrarHora, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanelDatosPedido, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanelCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(28, 28, 28))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelMostrarFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelHora)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabelMostrarHora, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelPedidoNum)
                            .addComponent(jLabelMostrarPedidoNum, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabelFecha))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanelDatosPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonConfirmarPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(40, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuscarActionPerformed
        // TODO add your handling code here:
        //Cliente C = new Cliente();
        try {
            if(validarCamposPedido(0)){//Para validar que el campo del teléfono no este vacío
                C = buscarCliente(Long.parseLong(jTextFieldTelefono.getText()));
                if(C!=null){
                    jLabelMostrarTelefono.setText(String.valueOf(C.getTelefono()));
                    jLabelMostrarApeNom.setText(C.getApellido() + " " + C.getNombre());
                    jLabelMostrarDomicilio.setText(C.getDomicilio());
                    jLabelMensajeExistenciaCliente.setText("");
                    jLabelMostrarPedidoNum.setText(String.valueOf(P.obtenerSiguienteIdPedido()));
                }
                else{
                    jButtonBuscar.setEnabled(false);
                    jTextFieldTelefono.setEnabled(false);
                    jButtonNuevoCliente.setEnabled(true);
                    jLabelMensajeExistenciaCliente.setText("\"Cliente Inexistente\"");
                }
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(DatosPedido.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(DatosPedido.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonBuscarActionPerformed

    private void jComboBoxZonaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxZonaActionPerformed
        // TODO add your handling code here:
        switch(String.valueOf(jComboBoxZona.getSelectedItem())){
            case "Centro":
                jLabelMostrarImporte.setText(String.valueOf(listaZonas.get(0).getPrecio()));
                P.setZona(listaZonas.get(0).getIdZona());
                break;
            case "Norte":
                jLabelMostrarImporte.setText(String.valueOf(listaZonas.get(1).getPrecio()));
                P.setZona(listaZonas.get(1).getIdZona());
                break;
            case "Sur":
                jLabelMostrarImporte.setText(String.valueOf(listaZonas.get(2).getPrecio()));
                P.setZona(listaZonas.get(2).getIdZona());
                break;
            case "Este":
                jLabelMostrarImporte.setText(String.valueOf(listaZonas.get(3).getPrecio()));
                P.setZona(listaZonas.get(3).getIdZona());
                break;
            case "Oeste":
                jLabelMostrarImporte.setText(String.valueOf(listaZonas.get(4).getPrecio()));
                P.setZona(listaZonas.get(4).getIdZona());
                break;
        }
    }//GEN-LAST:event_jComboBoxZonaActionPerformed

    private void jButtonAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAgregarActionPerformed
        // TODO add your handling code here:
        try {
            if(validarCamposPedido(3)){//Para validar que el campo seleccionar comida y cantidad no esten vacío
                String[] datos = new String[5];
                ABMComida ABMC = new ABMComida();
                Comida Co = new Comida();
                Co = ABMC.buscarComida(String.valueOf(jComboBoxSeleccionarComida.getSelectedItem()));
                if(Co!=null){
                    datos[0] = String.valueOf(Co.getIdComida());
                    datos[1] = Co.getDescripcion();
                    datos[2] = jTextFieldCantidad.getText();
                    datos[3] = String.valueOf(Co.getPrecio());
                    datos[4] = String.valueOf(Float.parseFloat(datos[3]) * Float.parseFloat(jTextFieldCantidad.getText()));
                    total = total + Float.parseFloat(datos[4]);
                    modelo.addRow(datos);
                    jLabelMostrarImporteTotal.setText(String.valueOf(total));
                }
                else{
                    JOptionPane.showMessageDialog(null, "No Hay Disponible "+jComboBoxSeleccionarComida.getSelectedItem(),"FastFoodSystem",JOptionPane.INFORMATION_MESSAGE);
                }                
            }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(DatosPedido.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonAgregarActionPerformed

    private void jButtonConfirmarPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConfirmarPedidoActionPerformed
        // TODO add your handling code here:
        java.util.Date FP = new java.util.Date();
        try {
            if(validarCamposPedido(1)){//Para validar que el campo lugar de envio y zono no esten vacíos y tratar un nuevo pedido
                ConfirmarPedido CP = new ConfirmarPedido();
                listaDetallePedido.clear();
                if(Cl.isEstado()){//Para tratar un pedido que se desea modificar
                    P.setLugarDeEnvio(jTextFieldLugarDeEnvio.getText());
                    cargarDetallePedido(1);//carga un detalle de pedido a modificar
                    CP.setB(1);//mando 1 porque es un pedido a modificar
                    CP.setDPMod(listaDPModificar);
                    CP.setCod(idP);
                    CP.mostrarNumPedido(1);
                }
                else{//Para tratar un pedido que es nuevo
                    C = buscarCliente(Long.parseLong(jTextFieldTelefono.getText()));
                    P.setIdCliente(C.getIdCliente());
                    P.setEstado(1);
                    java.sql.Date fecha = new java.sql.Date(FP.getTime());
                    P.setFecha(fecha);
                    java.sql.Time hora = new java.sql.Time(FP.getTime());
                    P.setHora(hora);
                    P.setLugarDeEnvio(jTextFieldLugarDeEnvio.getText());
                    cargarDetallePedido(0);//carga un detalle de pedido nuevo
                    CP.setB(0);//mando 0 porque es un nuevo pedido
                    CP.mostrarNumPedido(0);
                }
                this.dispose();
                CP.setUsuarioSistema(usuarioSistema);
                CP.setP(P);
                CP.setDP(listaDetallePedido);
                CP.setVisible(true);
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(DatosPedido.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(DatosPedido.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonConfirmarPedidoActionPerformed
    
    private void jButtonNuevoClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNuevoClienteActionPerformed
        // TODO add your handling code here:
        VentanaClientes VC = new VentanaClientes();
        VC.setTelefono(jTextFieldTelefono.getText());
        try {
            VC.LlenarCampos();
        } catch (SQLException ex) {
            Logger.getLogger(DatosPedido.class.getName()).log(Level.SEVERE, null, ex);
        }
        VC.setVisible(true);
    }//GEN-LAST:event_jButtonNuevoClienteActionPerformed

    private void jButtonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminarActionPerformed
        // TODO add your handling code here:
        int fila = jTableDetallesPedido.getSelectedRow();
        if (fila >= 0) {
            int filasselec[]  = jTableDetallesPedido.getSelectedRows();
            for (int i=0; i<filasselec.length;i++){
                total = total - Float.parseFloat(String.valueOf(modelo.getValueAt(filasselec[i], 4)));
                jLabelMostrarImporteTotal.setText(String.valueOf(total));
                modelo.removeRow(filasselec[i]-i);
            }
        } else {
            JOptionPane.showMessageDialog(null, "No Selecciono Ninguna Fila", "Fast Food System", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonEliminarActionPerformed

    private void jButtonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButtonCancelarActionPerformed

    //Validar que la cantidad debe ser un número
    private void jTextFieldCantidadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldCantidadKeyTyped
        // TODO add your handling code here:
        char c=evt.getKeyChar();
        if(Character.isLetter(c)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(this, "La Cantidad Debe Ser Un Número","FastFoodSystem",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jTextFieldCantidadKeyTyped

    private void jTextFieldTelefonoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldTelefonoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldTelefonoActionPerformed

    public Cliente buscarCliente(long telefono) throws ClassNotFoundException, SQLException{
        OperacionesCliente ABMC = new OperacionesCliente();
        Cliente C = new Cliente();
        C = ABMC.buscarCliente(telefono);
        return C;
    }
    
    public void mostrarTablaModificar(int codP, long telefono) throws ClassNotFoundException, SQLException{
        Comida Co = new Comida();        
        String[] datos = new String[5];
        OperacionesPedido ABMP = new OperacionesPedido();
        ABMComida ABMCo = new ABMComida();
        jButtonNuevoCliente.setEnabled(false);
        jButtonBuscar.setEnabled(false);
        jTextFieldTelefono.setEnabled(false);
        idP = codP;
        P = ABMP.buscarPedido(codP);
        Cl = buscarCliente(telefono);
        listaDetallePedido = ABMP.buscarDetallePedido(P.getIdPedido());
        if(Cl!=null){
            jLabelMostrarTelefono.setText(String.valueOf(Cl.getTelefono()));
            jLabelMostrarApeNom.setText(Cl.getApellido() + " " + Cl.getNombre());
            jLabelMostrarDomicilio.setText(Cl.getDomicilio());
            jLabelMostrarPedidoNum.setText(String.valueOf(codP));
            jTextFieldLugarDeEnvio.setText(P.getLugarDeEnvio());
            cargarJComboBoxZona();
            for(int i = 0; i<listaDetallePedido.size(); i++){
                Co = ABMCo.buscarComidaId(listaDetallePedido.get(i).getIdComida());
                datos[0] = String.valueOf(listaDetallePedido.get(i).getIdComida());
                datos[1] = Co.getDescripcion();
                datos[2] = String.valueOf(listaDetallePedido.get(i).getCantidad());
                datos[3] = String.valueOf(Co.getPrecio());
                datos[4] = String.valueOf(Float.parseFloat(datos[3]) * Float.parseFloat(String.valueOf(listaDetallePedido.get(i).getCantidad())));
                total = total + Float.parseFloat(datos[4]);
                modelo.addRow(datos);
                jLabelMostrarImporteTotal.setText(String.valueOf(total));
            }
        }  
    }
    
    public void cargarJComboBoxZona() throws ClassNotFoundException, SQLException{
        OperacionesPedido ABMP = new OperacionesPedido();
        listaZonas = ABMP.buscarZona();
        for(int i = 0; i<listaZonas.size(); i++){
            jComboBoxZona.addItem(listaZonas.get(i).getDescripcion());
        }
      if(Cl.isEstado()){
          int i = 0;
          while(P.getZona()!= listaZonas.get(i).getIdZona())
              i++;
          jComboBoxZona.setSelectedItem(listaZonas.get(i).getDescripcion());
          jLabelMostrarImporte.setText(String.valueOf(listaZonas.get(i).getPrecio()));
      }
    }
    
    public void cargarJComboBoxComidaDisponible() throws ClassNotFoundException, SQLException{
        ABMComida ABMC = new ABMComida();
        ArrayList<Comida> listaComida = new ArrayList<Comida>();
        listaComida = ABMC.recuperarComidas();
        for(int i = 0; i<listaComida.size(); i++){
            jComboBoxSeleccionarComida.addItem(listaComida.get(i).getDescripcion());
        }
    }
    
    public void cargarDetallePedido(int p) throws ClassNotFoundException, SQLException{
        for(int i = 0; i<modelo.getRowCount(); i++){
                DetallePedido DP = new DetallePedido();
                DP.setCantidad(Integer.parseInt(String.valueOf(modelo.getValueAt(i, 2))));
                DP.setIdComida(Integer.parseInt(String.valueOf(modelo.getValueAt(i, 0))));
                if(p==0)
                    listaDetallePedido.add(DP);
                else
                    listaDPModificar.add(DP);
            }
    }
    
    public boolean validarCamposPedido(int v){
        //Valida el telefono del cliente a buscar
        switch (v) {
            case 0:
                if(jTextFieldTelefono.getText().length()<=0){
                    JOptionPane.showMessageDialog(this,"ERROR: El Teléfono No Debe Ser Vacío","FastFoodSystem",JOptionPane.ERROR_MESSAGE);
                    return false;
                }   break;
            case 1:
                if(jTextFieldLugarDeEnvio.getText().length()<=0){
                    JOptionPane.showMessageDialog(this,"ERROR: El Lugar De Envío No Debe Ser Vacío","FastFoodSystem",JOptionPane.ERROR_MESSAGE);
                    return false;
                }   if(jComboBoxZona.getSelectedIndex()==0){
                    JOptionPane.showMessageDialog(this,"ERROR: Debe Seleccionar Una Zona","FastFoodSystem",JOptionPane.ERROR_MESSAGE);
                    return false;
                }   if(jTableDetallesPedido.getRowCount()==0){
                    JOptionPane.showMessageDialog(this,"ERRO: El Pedido No Contiene Datos Del Pedido","FastFoodSystem",JOptionPane.ERROR_MESSAGE);
                    return false;
                }   break;
            default:
                if(jComboBoxSeleccionarComida.getSelectedIndex()==0){
                    JOptionPane.showMessageDialog(this,"ERROR: Debe Seleccionar Una Comida","FastFoodSystem",JOptionPane.ERROR_MESSAGE);
                    return false;
                }   if(jTextFieldCantidad.getText().length()<=0){
                    JOptionPane.showMessageDialog(this,"ERROR: La Cantidad No Debe Ser Vacío","FastFoodSystem",JOptionPane.ERROR_MESSAGE);
                    return false;
                }   break;
        }
        return true;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DatosPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DatosPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DatosPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DatosPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new DatosPedido().setVisible(true);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(DatosPedido.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(DatosPedido.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAgregar;
    private javax.swing.JButton jButtonBuscar;
    private javax.swing.JButton jButtonCancelar;
    private javax.swing.JButton jButtonConfirmarPedido;
    private javax.swing.JButton jButtonEliminar;
    private javax.swing.JButton jButtonNuevoCliente;
    private javax.swing.JComboBox<String> jComboBoxSeleccionarComida;
    private javax.swing.JComboBox<String> jComboBoxZona;
    private javax.swing.JLabel jLabelApeNom;
    private javax.swing.JLabel jLabelBuscarTelefono;
    private javax.swing.JLabel jLabelCantidad;
    private javax.swing.JLabel jLabelComida;
    private javax.swing.JLabel jLabelDomicilio;
    private javax.swing.JLabel jLabelFecha;
    private javax.swing.JLabel jLabelHora;
    private javax.swing.JLabel jLabelImporteEnvio;
    private javax.swing.JLabel jLabelImporteTotal;
    private javax.swing.JLabel jLabelLugarEnvio;
    private javax.swing.JLabel jLabelMensajeExistenciaCliente;
    private javax.swing.JLabel jLabelMostrarApeNom;
    private javax.swing.JLabel jLabelMostrarDomicilio;
    private javax.swing.JLabel jLabelMostrarFecha;
    private javax.swing.JLabel jLabelMostrarHora;
    private javax.swing.JLabel jLabelMostrarImporte;
    private javax.swing.JLabel jLabelMostrarImporteTotal;
    private javax.swing.JLabel jLabelMostrarPedidoNum;
    private javax.swing.JLabel jLabelMostrarTelefono;
    private javax.swing.JLabel jLabelPedidoNum;
    private javax.swing.JLabel jLabelTelefono;
    private javax.swing.JLabel jLabelZona;
    private javax.swing.JPanel jPanelBuscarCliente;
    private javax.swing.JPanel jPanelCliente;
    private javax.swing.JPanel jPanelDatosPedido;
    private javax.swing.JScrollPane jScrollPaneDetallePedido;
    private javax.swing.JTable jTableDetallesPedido;
    private javax.swing.JTextField jTextFieldCantidad;
    private javax.swing.JTextField jTextFieldLugarDeEnvio;
    private javax.swing.JTextField jTextFieldTelefono;
    // End of variables declaration//GEN-END:variables
}
