/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Presentacion;

import Datos.Usuario;
import Logica.ABMUsuario;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Gonzalez
 */
public class GestionarUsuario extends javax.swing.JFrame {

    private TableRowSorter trsFiltro;
    private DefaultTableModel modelo;
    Usuario usuarioSistema;

    /**
     * Creates new form GestionarUsuarip
     */
    public GestionarUsuario() {
        initComponents();
        setLocationRelativeTo(null);
        setResizable(false);
        jButtonEliminarUsu.setEnabled(false);
        jButtonModificarUsu.setEnabled(false);
        String cabecera[] = {"Id", "Nombre Usuario", "Nombre y Apellido","Tipo Documento", "Nro Documento", "Tipo Usuario"};
        String datos[][] = {};
        modelo = new DefaultTableModel(datos, cabecera);
        jTableUsuario.setModel(modelo);
        cargarTablaUsuario();
        jButtonCancelarSelecc.setBackground(java.awt.Color.red);
        jButtonCancelarSelecc.setEnabled(false);
        jTableUsuario.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent e) {
                int fila = jTableUsuario.rowAtPoint(e.getPoint());
                int columna = jTableUsuario.columnAtPoint(e.getPoint());
                if ((fila > -1) && (columna > -1)) {
                    jButtonEliminarUsu.setEnabled(true);
                    jButtonModificarUsu.setEnabled(true);
                    jButtonNuevoUsu.setEnabled(false);
                    jButtonCancelarSelecc.setEnabled(true);
                }
            }
        });
        usuarioSistema = new Usuario();

    }

    public Usuario getUsuarioSistema() {
        return usuarioSistema;
    }

    public void setUsuarioSistema(Usuario usuarioSistema) {
        this.usuarioSistema = usuarioSistema;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelNombreUsu = new javax.swing.JPanel();
        jLabelNombreUsu = new javax.swing.JLabel();
        jTextFieldNombre = new javax.swing.JTextField();
        jButtonNuevoUsu = new javax.swing.JButton();
        jButtonModificarUsu = new javax.swing.JButton();
        jButtonEliminarUsu = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableUsuario = new JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex) {
                return false;
            }
        };
        jButtonCancelarSelecc = new javax.swing.JButton();
        jButtonCancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("FastFoodSystem - Gestionar Usuario");

        jPanelNombreUsu.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Buscar Usuario", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Verdana", 0, 14))); // NOI18N

        jLabelNombreUsu.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabelNombreUsu.setText("Nombre de Usuario:");

        jTextFieldNombre.setMaximumSize(new java.awt.Dimension(210, 20));
        jTextFieldNombre.setMinimumSize(new java.awt.Dimension(210, 20));
        jTextFieldNombre.setPreferredSize(new java.awt.Dimension(210, 20));
        jTextFieldNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNombreActionPerformed(evt);
            }
        });
        jTextFieldNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldNombreKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldNombreKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanelNombreUsuLayout = new javax.swing.GroupLayout(jPanelNombreUsu);
        jPanelNombreUsu.setLayout(jPanelNombreUsuLayout);
        jPanelNombreUsuLayout.setHorizontalGroup(
            jPanelNombreUsuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelNombreUsuLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelNombreUsu)
                .addGap(18, 18, 18)
                .addComponent(jTextFieldNombre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelNombreUsuLayout.setVerticalGroup(
            jPanelNombreUsuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelNombreUsuLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanelNombreUsuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelNombreUsu)
                    .addComponent(jTextFieldNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButtonNuevoUsu.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jButtonNuevoUsu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Iconos_Botones/icono-nuevo-usuario.png"))); // NOI18N
        jButtonNuevoUsu.setText("Nuevo Usuario");
        jButtonNuevoUsu.setMaximumSize(new java.awt.Dimension(180, 50));
        jButtonNuevoUsu.setMinimumSize(new java.awt.Dimension(180, 50));
        jButtonNuevoUsu.setPreferredSize(new java.awt.Dimension(180, 50));
        jButtonNuevoUsu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNuevoUsuActionPerformed(evt);
            }
        });

        jButtonModificarUsu.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jButtonModificarUsu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Iconos_Botones/icono-modificar-usuario.png"))); // NOI18N
        jButtonModificarUsu.setText("Modificar Usuario");
        jButtonModificarUsu.setMaximumSize(new java.awt.Dimension(180, 50));
        jButtonModificarUsu.setMinimumSize(new java.awt.Dimension(180, 50));
        jButtonModificarUsu.setPreferredSize(new java.awt.Dimension(180, 50));
        jButtonModificarUsu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModificarUsuActionPerformed(evt);
            }
        });

        jButtonEliminarUsu.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jButtonEliminarUsu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Iconos_Botones/icono-borrar-usuario.png"))); // NOI18N
        jButtonEliminarUsu.setText("Eliminar Usuario");
        jButtonEliminarUsu.setMaximumSize(new java.awt.Dimension(180, 50));
        jButtonEliminarUsu.setMinimumSize(new java.awt.Dimension(180, 50));
        jButtonEliminarUsu.setPreferredSize(new java.awt.Dimension(180, 50));
        jButtonEliminarUsu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminarUsuActionPerformed(evt);
            }
        });

        jTableUsuario.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jTableUsuario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Id", "Nombre Usuario", "Nombre y Apellido", "Contraseña", "Tipo Documento", "Nro Documento", "Tipo Usuario"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableUsuario.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTableUsuario);
        if (jTableUsuario.getColumnModel().getColumnCount() > 0) {
            jTableUsuario.getColumnModel().getColumn(0).setResizable(false);
            jTableUsuario.getColumnModel().getColumn(1).setResizable(false);
            jTableUsuario.getColumnModel().getColumn(2).setResizable(false);
            jTableUsuario.getColumnModel().getColumn(3).setResizable(false);
            jTableUsuario.getColumnModel().getColumn(4).setResizable(false);
            jTableUsuario.getColumnModel().getColumn(5).setResizable(false);
            jTableUsuario.getColumnModel().getColumn(6).setResizable(false);
        }

        jButtonCancelarSelecc.setBackground(new java.awt.Color(255, 0, 0));
        jButtonCancelarSelecc.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jButtonCancelarSelecc.setForeground(new java.awt.Color(255, 255, 255));
        jButtonCancelarSelecc.setText("Cancelar seleccion");
        jButtonCancelarSelecc.setMaximumSize(new java.awt.Dimension(180, 140));
        jButtonCancelarSelecc.setMinimumSize(new java.awt.Dimension(180, 140));
        jButtonCancelarSelecc.setPreferredSize(new java.awt.Dimension(180, 140));
        jButtonCancelarSelecc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarSeleccActionPerformed(evt);
            }
        });

        jButtonCancelar.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jButtonCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Iconos_Botones/icono-cancelar.png"))); // NOI18N
        jButtonCancelar.setText("Cancelar");
        jButtonCancelar.setMaximumSize(new java.awt.Dimension(180, 50));
        jButtonCancelar.setMinimumSize(new java.awt.Dimension(180, 50));
        jButtonCancelar.setPreferredSize(new java.awt.Dimension(180, 50));
        jButtonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jButtonCancelarSelecc, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButtonNuevoUsu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                                .addComponent(jButtonModificarUsu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(46, 46, 46)
                                .addComponent(jButtonEliminarUsu, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1)
                            .addComponent(jPanelNombreUsu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jPanelNombreUsu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonEliminarUsu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonModificarUsu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonNuevoUsu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                        .addComponent(jButtonCancelarSelecc, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNombreActionPerformed
        if (validarCampoNombreUsu()) {
            ABMUsuario BU = new ABMUsuario();
            Usuario U = new Usuario();
            try {
                U = BU.buscarUsuario(String.valueOf(jTextFieldNombre.getText()));
                if (U == null) {
                    JOptionPane.showMessageDialog(this, "El Usuario No Existe\nPara registrarlo presione \"Nuevo Usuario\"", "FastFoodSystem", JOptionPane.INFORMATION_MESSAGE);
                }
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(GestionarUsuario.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(GestionarUsuario.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jTextFieldNombreActionPerformed

    private void jTextFieldNombreKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldNombreKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNombreKeyReleased

    private void jTextFieldNombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldNombreKeyTyped
        jTextFieldNombre.addKeyListener(new KeyAdapter() {
            @Override
            public void keyReleased(final KeyEvent e) {
                trsFiltro.setRowFilter(RowFilter.regexFilter("(?i)" + jTextFieldNombre.getText(), 1));
            }
        });

        trsFiltro = new TableRowSorter(jTableUsuario.getModel());
        jTableUsuario.setRowSorter(trsFiltro);
        jTableUsuario.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent e) {
                int fila = jTableUsuario.rowAtPoint(e.getPoint());
                int columna = jTableUsuario.columnAtPoint(e.getPoint());
                if ((fila > -1) && (columna > -1)) {
                    jButtonEliminarUsu.setEnabled(true);
                    jButtonModificarUsu.setEnabled(true);
                    jButtonNuevoUsu.setEnabled(false);
                    jButtonCancelarSelecc.setEnabled(true);
                }
            }
        });
    }//GEN-LAST:event_jTextFieldNombreKeyTyped

    private void jButtonNuevoUsuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNuevoUsuActionPerformed
        Usuarios U = new Usuarios();
        U.setNombreUsu(jTextFieldNombre.getText());
        U.setCondatos_vacio(0);
        try {
            U.LlenarCampos(1);
        } catch (SQLException ex) {
            Logger.getLogger(GestionarUsuario.class.getName()).log(Level.SEVERE, null, ex);
        }
        U.setUsuarioSistema(usuarioSistema);
        System.out.println(usuarioSistema.getTipoUsuario());
        U.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButtonNuevoUsuActionPerformed

    private void jButtonModificarUsuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModificarUsuActionPerformed
        int fila = jTableUsuario.getSelectedRow();
        int id = (int) jTableUsuario.getValueAt(fila, 0);
        String nombUsu = String.valueOf(jTableUsuario.getValueAt(fila, 1));
        String nombApe = String.valueOf(jTableUsuario.getValueAt(fila, 2));
        String contra = "";
//String contra = String.valueOf(jTableUsuario.getValueAt(fila, 3));
        String tipoDocu = String.valueOf(jTableUsuario.getValueAt(fila, 3));
        int docu = (int) jTableUsuario.getValueAt(fila, 4);
        String tipoUsu =  (String) jTableUsuario.getValueAt(fila, 5);
        int tipoU = 0;
        if (tipoUsu.equals("Administrador")) {
            tipoU = 1;
        }
        if (tipoUsu.equals("Encargado")) {
            tipoU = 2;
        }
        if (tipoUsu.equals("Cocinero")) {
            tipoU = 2;
        }

        Usuarios VU = new Usuarios();
        Usuario U = new Usuario(id, nombUsu, nombApe, tipoDocu, docu, tipoU);
        VU.setDatosUsuario(U);
        VU.setCondatos_vacio(1);
        try {
            VU.LlenarCampos(3);
        } catch (SQLException ex) {
            Logger.getLogger(GestionarUsuario.class.getName()).log(Level.SEVERE, null, ex);
        }
        VU.setUsuarioSistema(usuarioSistema);
        System.out.println(usuarioSistema.getTipoUsuario());
        VU.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButtonModificarUsuActionPerformed

    private void jButtonEliminarUsuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminarUsuActionPerformed
        int fila = jTableUsuario.getSelectedRow();

        int id = (int) jTableUsuario.getValueAt(fila, 0);
        String nombUsu = String.valueOf(jTableUsuario.getValueAt(fila, 1));
        String nombApe = String.valueOf(jTableUsuario.getValueAt(fila, 2));
        //String contra = String.valueOf(jTableUsuario.getValueAt(fila, 3));
        String contra = "";
        String tipoDocu = String.valueOf(jTableUsuario.getValueAt(fila, 3));
        int docu = (int) jTableUsuario.getValueAt(fila, 4);
        String tipoUsu =  (String) jTableUsuario.getValueAt(fila, 5);
        int tipoU = 0;
        if (tipoUsu.equals("Administrador")) {
            tipoU = 1;
        }
        if (tipoUsu.equals("Encargado")) {
            tipoU = 2;
        }
        if (tipoUsu.equals("Cocinero")) {
            tipoU = 2;
        }
        
       
        
        System.out.println(id + nombUsu + nombApe +contra+ tipoDocu + docu + tipoUsu);

        Usuarios VU = new Usuarios();
        Usuario U = new Usuario(id, nombUsu, nombApe, tipoDocu, docu, tipoU);
        VU.setDatosUsuario(U);
        VU.setCondatos_vacio(1);
        try {
            VU.LlenarCampos(2);
        } catch (SQLException ex) {
            Logger.getLogger(GestionarUsuario.class.getName()).log(Level.SEVERE, null, ex);
        }
        VU.setUsuarioSistema(usuarioSistema);
        System.out.println(usuarioSistema.getTipoUsuario());
        VU.setVisible(true);
        this.dispose();

    }//GEN-LAST:event_jButtonEliminarUsuActionPerformed

    private void jButtonCancelarSeleccActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarSeleccActionPerformed
        jTableUsuario.clearSelection();
        jButtonEliminarUsu.setEnabled(false);
        jButtonModificarUsu.setEnabled(false);
        jButtonNuevoUsu.setEnabled(true);
        jButtonCancelarSelecc.setEnabled(false);
    }//GEN-LAST:event_jButtonCancelarSeleccActionPerformed

    private void jButtonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButtonCancelarActionPerformed

    private void cargarTablaUsuario() {
        ResultSet Re;
        try {
            Usuario U = new Usuario();
            Re = U.consultarTodosLosUsuarios();
            try {
                while (Re.next()) {
                    int id = Re.getInt("idUsuario");
                    String nombUsu = Re.getString("nombreUsuario");
                    String nombApe = Re.getString("nombreYApellido");
                    //String contra = Re.getString("contraseña");
                    String tipoDocu = Re.getString("tipoDocumento");
                    int docu = Re.getInt("numDocumento");
                    int tipoUsu = Re.getInt("tipoUsuario");
                    String tipoU = "";
                    switch(tipoUsu){
                        case 1: tipoU = "Administrador"; break;
                        case 2: tipoU = "Encargado"; break;
                        case 3: tipoU = "Cocinero"; break;
                    }
                    
                    Object fila[] = {id,nombUsu,nombApe,tipoDocu,docu,tipoU};
                    modelo.addRow(fila);
                }
            } catch (SQLException ex) {
                Logger.getLogger(GestionarUsuario.class.getName()).log(Level.SEVERE, null, ex);
            }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(GestionarUsuario.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public boolean validarCampoNombreUsu() {
        if (jTextFieldNombre.getText().length() > 0) {
            if (jTextFieldNombre.getText().length() <= 20) {
                if (jTextFieldNombre.getText().matches("[A-Za-z\\s]+")) {
                    return true;
                } else {
                    JOptionPane.showMessageDialog(this, "ERROR: El Nombre De Usuario Debe Contener Solo Letras", "FastFoodSystem", JOptionPane.ERROR_MESSAGE);
                    return false;
                }
            } else {
                JOptionPane.showMessageDialog(this, "ERROR: El Campo \"Nombre de Usuario\" No Debe Contener Mas de 20 Caracteres", "FastFoodSystem", JOptionPane.ERROR_MESSAGE);
                return false;
            }
        } else {
            JOptionPane.showMessageDialog(this, "ERROR: El Campo \"Nombre de Usuario\" No Debe Estar Vacio", "FastFoodSystem", JOptionPane.ERROR_MESSAGE);
            return false;
        }
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GestionarUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GestionarUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GestionarUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GestionarUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GestionarUsuario().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancelar;
    private javax.swing.JButton jButtonCancelarSelecc;
    private javax.swing.JButton jButtonEliminarUsu;
    private javax.swing.JButton jButtonModificarUsu;
    private javax.swing.JButton jButtonNuevoUsu;
    private javax.swing.JLabel jLabelNombreUsu;
    private javax.swing.JPanel jPanelNombreUsu;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableUsuario;
    private javax.swing.JTextField jTextFieldNombre;
    // End of variables declaration//GEN-END:variables

}
